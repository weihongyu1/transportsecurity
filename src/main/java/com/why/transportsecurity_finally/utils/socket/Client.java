package com.why.transportsecurity_finally.utils.socket;

import lombok.extern.java.Log;

import java.io.*;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

/**
 * @Description TODO
 * @Author why
 * @Date 2021/7/31 15:35
 * Version 1.0
 **/
@Log
public class Client {
    public static void main(String[] args) {
        for (int i = 0; i < 2; i++) {
            log.info("客户端启动...");
            Socket socket = null;
            OutputStream os = null;
            try {
                //创建socket实例，绑定端口号和ip
                socket = new Socket(InetAddress.getByName("106.52.60.176"),8888);
                String str = "���Ӳ���\n" +
                        "Longitude:119.51222 E\n" +
                        "latitude:32.20090 N\n" +
                        "Airbag status:  deployed\n" +
                        "车牌号：浙F88888ax:-2.300000,-0.335000,-0.376140,-0.376140,-0.211550,-0.335000,-0.335000,-0.437870,-0.335000,-0.170400,-0.376140,-1.343150,-2.083840,-3.133140,-4.100150,-4.470490,-3.770960,-2.865670,-1.754640,-0" +
                        ".952230,-1.487170,-2.721650,-3.770960,-4.635090,-5.746120,-6.692550,-7.927030,-9.346670,-10.354830,-11.486430,-12.700330,-13.646770,-14.654920,-17.905710,-15.519060,-16.732960,-19.983749,-18.913870,-21.135920,-21.403391,-20.251221,-19.448811,-18.378929,-17.370770,-16.465490,-14.284580,-15.251590,-13.235270,-12.124250,-10.992640,-9.614140,-8.503110,-7.597830,-8.873460,-12.906080,-9.984490,-11.218960,-12.124250,-7.659560,-13.873090,-14.716650,-21.629709,-19.489960,-17.576521,-15.683650,-22.679020,-20.498110,-16.691811,-18.481800,-28.583929,-26.073830,-27.246580,-24.818781,-23.646030,-29.859560,-32.040470,-31.073460,-32.822300,-31.711269,-30.641390,-30.003580,-28.954269,-27.987270,-26.937960,-26.197281,-25.127399,-23.913500,-22.781891,-21.629709,-20.868450,-19.819151,-11.589310,-17.802839,-16.938700,-16.259741,-15.354460,-14.654920,-13.975960,-12.638610,-18.749269,-10.786900,-9.840460,-10.581150,-11.692180,-13.008950,-14.243430,-15.251590,-16.300890,-17.535370,-18.749269,-21.835461,-21.033051,-19.922020,-22.843620,-22.576151,-21.567989,-20.292370,-18.913870,-18.214331,-17.329620,-16.156870,-15.189860,-14.181710,-13.338150,-12.494590,-11.692180,-19.078461,-13.338150,-14.284580,-12.494590,-16.259741,-17.267900,-17.802839,-22.000059,-19.819151,-20.765579,-15.560210,-23.481430,-24.654181,-26.135550,-27.143709,-28.213591,-30.703119,-29.489210,-31.978741,-33.028049,-34.200802,-36.649181,-37.760208,-35.476429,-39.035831,-37.492741,-38.603771,-32.822300,-35.949638,-34.900341,-33.933331,-36.710899,-29.962429,-30.744270,-31.608400,-28.851400,-27.822670,-26.711639,-25.436020,-24.057520,-22.102930,-23.213961,-20.765579,-19.325359,-19.551680,-20.662710,-21.609140,-22.679020,-23.646030,-24.489590,-24.160391,-23.152241,-22.514420,-23.378559,-24.160391,-24.901079,-26.135550,-26.608770,-27.246580,-28.316460,-29.592091,-30.744270,-30.168180,-27.719801,-28.995420,-26.773371,-25.929810,-24.901079,-25.806360,-26.937960,-27.884399,-28.460480,-27.411180,-26.403021,-25.497740,-24.160391,-24.859930,-23.378559,-22.246950,-23.316830,-24.859930,-25.929810,-27.452330,-28.995420,-29.633240,-27.719801,-26.505899,-25.600611,-24.222120,-22.349831,-20.559839,-19.284210,-18.378929,-17.370770,-16.198021,-15.025270,-13.811360,-12.803210,-11.054370,-10.149080,-8.544260,-7.330360,-6.857150,-6.363360,-5.478650,-4.779110,-4.100150,-3.503490,-2.762800,-1.816370,-0.911080,-1.590050,-2.618780,-1.980960,-1.178550,-1.590050,-1.919240,-1.384300,-0.581890,-0.911080,-0.479020,-0.376140,0.055920,0.734880,0.426260,-0.540740,0.467410,-0.211550,-0.808210,-0.437870,0.055920,0.734880,-0.170400,-0.170400,-0.170400,0.261670,0.097070,0.570290,-0.211550,0.055920,-0.437870,-0.911080,-0.746490,-0.005800,0.097070,-0.211550,-0.335000,-0.335000,-0.211550,-0.067530,-0.108680,-0.273270,-0.581890,-0.581890,-0.643610,-0.437870,-0.437870,-0.479020,-0.108680,-0.376140,-0.335000,-0.376140,-0.376140,-0.067530,-0.273270,-0.211550,-0.335000,-0.273270,-0.273270,-0.170400,0.055920,0.529140,0.570290,0.426260,0.158790,\n" +
                        "ay:1.064540,-0.185680,-2.988390,-1.463390,-4.005060,-5.214070,-2.411360,-3.551680,-1.243570,0.102830,1.380540,2.658240,3.619950,4.320630,3.042930,3.372660,3.757340,2.452160,1.916350,1.023330,-0.213160,-1.779380,-5.117900,-3.084560,-7.206190,-8.868580,-11.149220,-12.001020,-10.187510,-7.027590,-8.689980,-4.582090,-2.411360,-0.955050,0.748550,-0.748970,-1.779380,-3.867670,-2.026680,-0.858880,0.350130,1.627830,3.125360,2.273560,1.092020,-0.103250,-0.639060,0.281430,1.517920,2.768150,3.619950,4.746530,5.776940,6.271540,5.419730,4.609150,3.578740,2.301030,1.270630,0.240220,-0.611590,-0.281860,0.075350,0.597430,1.023330,0.927160,0.460040,-0.281860,-0.611590,-0.185680,0.102830,0.102830,-0.391770,-1.064960,-1.422170,-0.996270,-0.707760,-1.037490,-1.174870,-0.858880,-0.460460,-0.075770,-0.075770,-0.501680,-0.611590,-0.776450,-0.776450,-0.886360,-0.955050,-0.707760,-0.460460,-0.529150,-0.886360,-0.886360,-0.707760,-0.460460,-0.432980,-0.707760,-0.570370,-0.639060,-0.639060,-0.639060,-0.707760,-0.817670,-0.776450,-0.776450,-0.680280,-0.501680,-0.611590,-0.460460,-0.350550,-0.144470,-0.391770,-0.501680,-0.529150,-0.529150,-0.680280,-0.570370,-0.680280,-0.680280,-0.680280,-0.501680,-0.350550,-0.254380,-0.281860,-0.213160,-0.254380,-0.254380,-0.391770,-0.323070,-0.391770,-0.323070,-0.281860,-0.391770,-0.432980,-0.460460,-0.323070,-0.254380,-0.350550,-0.460460,-0.281860,-0.529150,-0.281860,-0.281860,-0.144470,-0.254380,-0.213160,-0.254380,-0.213160,-0.254380,-0.254380,-0.075770,-0.034560,-0.007080,-0.254380,-0.254380,-0.034560,-0.213160,-0.075770,0.144050,0.144050,-0.034560,\n" +
                        "end\n";
                //创建输出流，准备发送数据
                os = socket.getOutputStream();
                os.write(str.getBytes());
                os.flush();
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                //资源关闭
                try {
                    if (os != null){
                        os.close();
                    }
                    if (socket != null){
                        socket.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
